// Code generated by MockGen. DO NOT EDIT.
// Source: 2022_2_GoTo_team/internal/serverRestAPI/domain/interfaces/tagComponentInterfaces (interfaces: TagRepositoryInterface)

// Package mock is a generated GoMock package.
package mock

import (
	models "2022_2_GoTo_team/internal/serverRestAPI/domain/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTagRepositoryInterface is a mock of TagRepositoryInterface interface.
type MockTagRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTagRepositoryInterfaceMockRecorder
}

// MockTagRepositoryInterfaceMockRecorder is the mock recorder for MockTagRepositoryInterface.
type MockTagRepositoryInterfaceMockRecorder struct {
	mock *MockTagRepositoryInterface
}

// NewMockTagRepositoryInterface creates a new mock instance.
func NewMockTagRepositoryInterface(ctrl *gomock.Controller) *MockTagRepositoryInterface {
	mock := &MockTagRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockTagRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagRepositoryInterface) EXPECT() *MockTagRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetAllTags mocks base method.
func (m *MockTagRepositoryInterface) GetAllTags(arg0 context.Context) ([]*models.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTags", arg0)
	ret0, _ := ret[0].([]*models.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTags indicates an expected call of GetAllTags.
func (mr *MockTagRepositoryInterfaceMockRecorder) GetAllTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTags", reflect.TypeOf((*MockTagRepositoryInterface)(nil).GetAllTags), arg0)
}
